{
includes: "score",
//no_compile_image: "gui/progress-bar-center.png,gui/progress-bar-endcaps.png,gui/progress-bar-well-center.png",


on_process: "[ //Calculate, but do not draw anything yet.
	//// Calculate the coin display slowly rolling up or down.
	//if(object.vars.coins != (level.local_player and level.local_player.coins or 0)*100, 
	//	set(object.vars.coins, object.vars.coins + diff/20 + sign(diff))
	//		where diff = (level.local_player and level.local_player.coins or 0)*100 - object.vars.coins
	//),
	
	
	//// Calculate the boss HP bar at the bottom during boss-fights! You add objects to the player's bosses variable to turn this on, and when they die it turns off.
	//if(object.vars.bosses or object.vars.boss_hitpoints, [ //vars.boss_hitpoints animates to 0 after the last boss is killed, so we need to check for no boss hp *being displayed* before we remove the bar.
	//	if(target_hitpoints <= 0, set(object.vars.bosses, [])),
	//	if(object.vars.boss_hitpoints != target_hitpoints, //Make the bar fill up asymptotically (filling another half every cycle) so that it looks cool and smooth, but cap this once the divisions reach roughly 1 pixel in size, so it doesn't take infinite time.  This provides the looks cool benefits of gradually filling the bar, with an immediate sense of how far the current motion is going to reach since humans are good at intuitively judging rates of change.
	//		 set(object.vars.boss_hitpoints, 
	//			if(abs(target_hitpoints - object.vars.boss_hitpoints) < 0.001, target_hitpoints, object.vars.boss_hitpoints + (target_hitpoints - object.vars.boss_hitpoints)*0.15 )))
	//	] where target_hitpoints = if(object.vars.bosses, 
	//		sum(map(object.vars.bosses, value.hitpoints))
	//			/decimal(sum(map(object.vars.bosses, value.max_hitpoints))) ) ),	
]",


on_draw: "[ //Actually render the gui components.
	//// Draw the gold display. The score display is drawn in score.cfg.
	//draw_animation('gold_background', 178, 10),
	//draw_number(object.vars.coins, 5, 202, 14),


	//// The portraitsâ€¦
	//if(level.local_player and is_int(level.local_player.current_ability),
	//	switch(level.local_player.ability_list[level.local_player.current_ability],
	//		   'tongue',     draw_animation('frogatto_tongue_portrait',     10, 10),
	//		   'firebreath', draw_animation('frogatto_firebreath_portrait', 10, 10),
	//		   'energyshot', draw_animation('frogatto_energyshot_portrait', 10, 10),
	//		   'homingshot', draw_animation('frogatto_homingshot_portrait', 10, 10),
	//		   'acidbreath', draw_animation('frogatto_acidbreath_portrait', 10, 10),
	//		                 draw_animation('frogatto_portrait',            10, 10))),
	

	//// Life-bar.		                 
  draw_animation('manabar_empty', 48, 32),
  if(level.local_player and level.local_player.hitpoints > 0, ([
    //draw_animation('charge_bar_left', x_offset, y_offset),
    //draw_animation('charge_bar_right', x_offset + barLength*2, y_offset),
    draw_animation_area('charge_bar_center', x_offset, y_offset, barLength)
  ] where x_offset = 52, 
          y_offset = 32,
          barLength = int((fullBarLength*level.local_player.hitpoints)/level.local_player.max_hitpoints))
    where fullBarLength = 119 ),

	
	//// The blue mana-bar.		                 
	//draw_animation('manabar_empty', 48, 32),
	//if(level.local_player and level.local_player.mana > 0, ([
	//	draw_animation('charge_bar_left', x_offset, y_offset),
	//	draw_animation('charge_bar_right', x_offset + barLength*2, y_offset),
	//	if(barLength > 5, draw_animation_area('charge_bar_center', x_offset+10, y_offset, barLength-5))
	//] where x_offset = 52, 
	//        y_offset = 32,
	//        barLength = int((fullBarLength*level.local_player.mana)/level.local_player.max_mana))
	//  where fullBarLength = 114 ),
	
	
	//// Display the rows of hearts. First, the whole hearts, then empty hearts, then the half-heart if needed.
	//([	map(range( ceil(max_HP/decimal(hearts_per_row * hp_per_heart))), 'row_index',
	//		slice(
	//			map(range(hearts_per_row), 'index', 
	//				draw_animation('heart_full', x_offset+x_width*index, y_offset+y_height*row_index)),
	//			0, 
	//			max(0, min(hearts_per_row, cur_HP/hp_per_heart - hearts_per_row*row_index))
	//		)
	//	),
	//
	//	map(range(ceil(max_HP/decimal(hearts_per_row * hp_per_heart))), 'row_index',
	//		slice(
	//			map(range(hearts_per_row), 'index', 
	//				draw_animation('heart_empty', x_offset+x_width*index, y_offset+y_height*row_index)),
	//			max(0, min(hearts_per_row, (cur_HP)/hp_per_heart - hearts_per_row*row_index)), 
	//			min(hearts_per_row, ceil((max_HP)/decimal(hp_per_heart)) - hearts_per_row*row_index)
	//		)
	//	),
	//	
	//	if(cur_HP > 0 and cur_HP%hp_per_heart,
	//		map(range(hearts_per_row), 'index', 
	//			draw_animation('heart_half', x_offset+x_width*index, y_offset+y_height*row_index)
	//		)[cur_HP/hp_per_heart - row_index*(hearts_per_row)]
	//	) where row_index = cur_HP/(hearts_per_row * hp_per_heart)
	//] where x_offset = 10,
	//        y_offset = 52,
	//        x_width = 32,
	//        y_height = 32,
	//        hp_per_heart = 2,
	//        hearts_per_row = 10,
	//        ceil = lib.math.ceil,
	//        max_HP = level.local_player and level.local_player.max_hitpoints or 0,
	//        cur_HP = level.local_player and level.local_player.hitpoints or 0 ),
	
	
	//// The boss health bar.
	//if(object.vars.boss_hitpoints, ([
	//	draw_animation('charge_bar_well_left', well_start, SCREEN_HEIGHT - 44),
	//	draw_animation_area('charge_bar_well_center', well_start + 16, SCREEN_HEIGHT - 44, well_size/2),
	//	draw_animation('charge_bar_well_right', well_start + well_size - 16, SCREEN_HEIGHT - 44),
	//	draw_animation('boss_angryface_heart_icon', 20, SCREEN_HEIGHT - 56),
	//	
	//	if(boss_hitpoints < 20, [
	//		draw_animation_area('charge_bar_left', bar_start, SCREEN_HEIGHT - 40, boss_hitpoints/4),
	//		draw_animation_area('charge_bar_right', bar_start + boss_hitpoints/2, SCREEN_HEIGHT - 40, 5 - boss_hitpoints/4, 0, boss_hitpoints/4, 5),
	//	],[
	//		draw_animation_area('charge_bar_center', bar_start + 10, SCREEN_HEIGHT - 40, (boss_hitpoints)/2),
	//		draw_animation('charge_bar_left', bar_start, SCREEN_HEIGHT - 40),
	//		draw_animation('charge_bar_right', bar_start + boss_hitpoints, SCREEN_HEIGHT - 40),
	//	]),
	//] where boss_hitpoints = object.vars.boss_hitpoints*bar_size
	//   	where bar_size = well_size - 2
	//	where well_size = 640,
	//	      bar_start = well_start + 4
	//   	where well_start = 90 )),
]",


animation: [
	# Character and weapon icons
	//{
	//	id: "frogatto_portrait",
	//	image: "gui/hud.png",
	//	rect: [1,36,20,55],
	//	frames: 1,
	//	duration: 6,
	//},
	//{
	//	id: "frogatto_energyshot_portrait",
	//	image: "gui/hud.png",
	//	rect: [27,36,46,55],
	//	frames: 1,
	//	duration: 6,
	//},
	//{
	//	id: "frogatto_firebreath_portrait",
	//	image: "gui/hud.png",
	//	rect: [53,36,72,55],
	//	frames: 1,
	//	duration: 6,
	//},
	//{
	//	id: "frogatto_tongue_portrait",
	//	image: "gui/hud.png",
	//	rect: [79,36,98,55],
	//	frames: 1,
	//	duration: 6,
	//},
	//{
	//	id: "frogatto_homingshot_portrait",
	//	image: "gui/hud.png",
	//	rect: [53,62,72,81],
	//	frames: 1,
	//	duration: 6,
	//},
	//{
	//	id: "frogatto_acidbreath_portrait",
	//	image: "gui/hud.png",
	//	rect: [79,62,98,81],
	//	frames: 1,
	//	duration: 6,
	//},
	//{
	//	id: "nene_portrait",
	//	image: "gui/hud.png",
	//	rect: [1,62,20,81],
	//	frames: 1,
	//	duration: 6,
	//},
	//{
	//	id: "nene_flamethrower_portrait",
	//	image: "gui/hud.png",
	//	rect: [27,62,46,81],
	//	frames: 1,
	//	duration: 6,
	//},
	//{
	//	id: "pato_portrait",
	//	image: "gui/hud.png",
	//	rect: [1,88,20,107],
	//	frames: 1,
	//	duration: 6,
	//},
	//{
	//	id: "pato_glove_portrait",
	//	image: "gui/hud.png",
	//	rect: [27,88,46,107],
	//	frames: 1,
	//	duration: 6,
	//},
	//{
	//	id: "gold_background",
	//	image: "gui/hud.png",
	//	rect: [1,1,58,11],
	//	frames: 1,
	//	duration: 100,
	//},
	//{
	//	id: "small_heart_full",
	//	image: "gui/hud.png",
	//	rect: [72,17,82,28],
	//	frames: 1,
	//	duration: 100,
	//},
	//{
	//	id: "small_heart_empty",
	//	image: "gui/hud.png",
	//	rect: [114,17,124,28],
	//	frames: 1,
	//	duration: 100,
	//},
	//{
	//	id: "heart_full",
	//	image: "gui/hud.png",
	//	rect: [76,145,90,165],
	//	frames: 1,
	//	duration: 100,
	//},
	//{
	//	id: "heart_half",
	//	image: "gui/hud.png",
	//	rect: [94,145,108,165],
	//	frames: 1,
	//	duration: 100,
	//},
	//{
	//	id: "heart_empty",
	//	image: "gui/hud.png",
	//	rect: [112,145,126,165],
	//	frames: 1,
	//	duration: 100,
	//},
	//{
	//	id: "bar_frame",
	//	image: "gui/hud.png",
	//	rect: [4,115,43,126],
	//},
	//{
	//	id: "bar_element",
	//	image: "gui/hud.png",
	//	rect: [98,105,109,112],
	//},
	//{
	//	id: "charge_bar_center",
	//	image: "gui/progress-bar-center.png",
	//	rect: [0,0,7,7],
	//},
	//{
	//	id: "charge_bar_left",
	//	image: "gui/progress-bar-endcaps.png",
	//	rect: [3,0,7,6],
	//},
	//{
	//	id: "charge_bar_right",
	//	image: "gui/progress-bar-endcaps.png",
	//	rect: [0,8,4,14],
	//},
	//{
	//	id: "charge_bar_well_center",
	//	image: "gui/progress-bar-well-center.png",
	//	rect: [0,0,15,11],
	//},
	//{
	//	id: "charge_bar_well_left",
	//	image: "gui/progress-bar-well-endcaps.png",
	//	rect: [0,0,15,11],
	//},
	//{
	//	id: "charge_bar_well_right",
	//	image: "gui/progress-bar-well-endcaps.png",
	//	rect: [0,16,15,27],
	//},
	{
		id: "charge_bar_center",
		image: "gui/progress-bar-center.png",
		rect: [0,0,7,7],
	},
	{
		id: "manabar_empty",
		image: "gui/hud.png",
		rect: [2,131,124,139],
	},
	//{
	//	id: "boss_angryface_heart_icon",
	//	image: "gui/hud.png",
	//	rect: [101,47,126,72],
	//},
],

} // EOF

