{
// Tree branch
tile_pattern: [
  // left
  {
    image: "tiles/swamp.png",
    solid: true,
    passthrough: true,
    reverse: false,
    tiles: "51",
    pattern: ".* ,  .*  ,  .*  ,
                 , (stb), (stb),
              .* ,  .*  ,  .*  ",
  },
  {
    image: "tiles/swamp.png",
    solid: true,
    passthrough: true,
    reverse: false,
    tiles: "55",
    pattern: ".*   ,  .*  , .*  ,
              (swt), (stb), .*  ,
              .*   ,  .*  , .*  ",
  },
	// middle
	{
    image: "tiles/swamp.png",
    solid: true,
    passthrough: true,
    reverse: false,
    tiles: "52",
    pattern: ".*   ,  .*  ,  .*  ,
              (stb), (stb), (stb),
              .*   ,  .*  ,  .*  ",
	},
	// right
	{
    image: "tiles/swamp.png",
    solid: true,
    passthrough: true,
    reverse: false,
    tiles: "56",
    pattern: ".*   ,  .*  , .* ,
              (stb), (stb),    ,
              .*   ,  .*  , .* ",
	},
	
  // detect singles
	{
    image: "tiles/swamp.png",
    solid: true,
    passthrough: true,
    reverse: false,
    tiles: "52",
    pattern: ".* , .*   , .* ,
              .* , (stb), .* ,
              .* , .*   , .* ",
	},
],

//multi_tile_pattern: [
//	{
//		chance: 100,
//		pattern: "swt->tile1, swt->tile2
//							swt->tile3, swt->tile4",
//		range: {
//			image: "tiles/swamp.png",
//			from: "tile1",
//			to: "tile4",
//			tiles: "ab",
//		},
//	},
//],

} // EOF
