{
is_strict: true,
id: "player_controlled_platformer_character",
prototype: ["player_controlled"],
is_human: true,
vehicle: false,
solid_dimensions: ["player","common","boss"],
collide_dimensions: ["player","enemy","hazard","item"],

max_hitpoints: 10,
hitpoints: 10,

properties: {
	hurt_velocity_y: -800,
	hurt_velocity_x: 800,
  attack_damage: 5,
	damage_cooldown: 10,
  posthit_invicibility_period: 62,
  points_value: 5,
  damage_type: "string :: 'slash'",

  //--------------------- Help functions ---------------------------
	can_jump: "def() -> bool
	  bool(bool(is_standing) and (not animation in ['fall', 'jump', 'start_jump', 'interact']))",

  //--------------------- Damage ---------------------------
  cause_flinch: "def(obj hittable|null collide_with) -> commands execute(me, [
      set(me.velocity_x,me.hurt_velocity_x * sign(me.midpoint_x - if(collide_with, collide_with.midpoint_x, 0))), 
      set(me.velocity_y,me.hurt_velocity_y),
      cause_hurt_anim(collide_with)
      ])",

  display_posthit_invincibility_flash_sequence: "def() -> commands if(posthit_invicibility_period > 0, [
      map(range(me.posthit_invicibility_period/2), 'step' ,schedule(step*2, if(step%2=0,set(me.alpha,50),set(me.alpha,255)))),
      schedule(posthit_invicibility_period, set(me.alpha,255)) ])",

	hurt_flash_sequence: "def() -> commands [
      // big
//      screen_flash([255, 0, 0,255], [255, 0, 0,0], 4),  
      // small
      flash_bright(),
      schedule(3, flash_off()),
//      screen_flash([255, 0, 0,200], [255, 0, 0,0], 3), 
//      screen_flash([255, 0, 0,70], [255, 0, 0,0], 2),
  ]",

},


} //EOF
