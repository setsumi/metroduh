{
is_strict: true,
id: "liquid",
prototype: ["standard_values"],
ignore_collide: true,
hidden_in_game: true,

editor_info: { category: "controllers" },

properties: {
	water_color: "[int] :: [70, 0, 70, 50]",
	add_water_effect: "commands :: add_water(zone_x1, zone_y1, zone_x2, zone_y2, water_color)",
	add_particle_effect: "commands :: []",

	liquid_damage: "int :: 0",
	damage_type: "string :: 'neutral'",
	remove_water_effect: "commands :: remove_water(zone_x1, zone_y1, zone_x2, zone_y2)",

	//--------------------- Editor Vars ---------------------------
	zone_x1: { type: "int", default: 0, editor_info: { type: "x"}},
	zone_x2: { type: "int", default: 0, editor_info: { type: "x"}},
	zone_y1: { type: "int", default: 0, editor_info: { type: "y"}},
	zone_y2: { type: "int", default: 0, editor_info: { type: "y"}},

},

//--------------------- Editor properties Init ---------------------------
on_being_added: "[set(zone_x1, me.midpoint_x - 200), set(zone_x2, me.midpoint_x + 200),
                 set(zone_y1, me.midpoint_y - 200), set(zone_y2, me.midpoint_y + 200)]",


on_editor_changing_variable:"remove_water_effect",
on_editor_removed: "remove_water_effect",
on_editor_changed_variable: "[add_water_effect, add_particle_effect]",
on_editor_added: "add_water_effect",

on_start_level: "
	set(activation_area, [
		zone_x1 - 50,
		zone_y1 - 100,
		zone_x2 - zone_x1 + 100,
		zone_y2 - zone_y1 + 100 ]
		)",

on_load: "add_particle_effect",

on_end_anim: "animation('normal')",

} // EOF
